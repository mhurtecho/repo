apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

repositories { mavenCentral() }

configurations { embeddedJetty }

dependencies {
	ext {
		jettyVersion = '9.2.1.v20140609'
		jerseyVersion = '2.22.1'
	}

	embeddedJetty "org.eclipse.jetty:jetty-server:$jettyVersion"
	embeddedJetty "org.eclipse.jetty:jetty-webapp:$jettyVersion"
	embeddedJetty "org.eclipse.jetty:jetty-annotations:$jettyVersion"
	embeddedJetty "org.eclipse.jetty:jetty-servlet:$jettyVersion"
	embeddedJetty "org.eclipse.jetty:jetty-servlets:$jettyVersion"
	embeddedJetty "org.eclipse.jetty:jetty-plus:$jettyVersion"

	compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
	compile 'org.springframework.data:spring-data-mongodb:1.8.0.RELEASE'
	compile 'org.springframework:spring-web:4.1.7.RELEASE'

	runtime "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
	runtime 'org.glassfish.jersey.ext:jersey-spring3:2.22.1'
	runtime 'org.slf4j:slf4j-jdk14:1.7.12'
	runtime "org.eclipse.jetty:jetty-annotations:$jettyVersion"
	runtime "org.eclipse.jetty:jetty-plus:$jettyVersion"

	testCompile 'junit:junit:4.12'
	testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:$jerseyVersion"
	testCompile 'com.github.fakemongo:fongo:1.6.2'
}

sourceSets.main.compileClasspath += configurations.embeddedJetty

war {
	from {
		configurations.embeddedJetty.collect { project.zipTree(it) }
	}
	exclude "META-INF/*.SF", "META-INF/*.RSA", "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"

	from "$buildDir/classes/main"
	exclude "com/rdbusiness/rest","com/rdbusiness/mongodb"

	manifest { attributes 'Main-Class': 'com.rdbusiness.application.EmbeddedWar' }
}

eclipse {
	classpath {
		plusConfigurations += [configurations.embeddedJetty]
	}
}

task warExec(type: JavaExec, dependsOn:build) {
	main = '-jar'
	args war.archivePath
}

task warExecDebug(type: Exec) { commandLine 'gradle', 'wE', '--debug-jvm' }

task fatJar(type: Jar) {
	from configurations.embeddedJetty.collect { zipTree(it) }
	from { configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
	manifest {
		attributes 'Main-Class': 'com.rdbusiness.application.EmbeddedJar'
	}
}

//jar {
//	//from files(sourceSets.main.output.classesDir)
//	//from configurations.runtime.collect { zipTree(it) }
//	from configurations.embeddedJetty.collect { zipTree(it) }
//	
//	from(configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }) {
//		exclude "META-INF/*.SF"
//		exclude "META-INF/*.DSA"
//		exclude "META-INF/*.RSA"
//	}
//
//	//   from configurations.runtime.collect {
//	//	  zipTree(it)
//	//   }
//
//   manifest {
//	  attributes 'Main-Class': 'com.rdbusiness.application.EmbeddedJar'
//   }
//
//   exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA', "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"
//}

apply from: 'rest.gradle'
