plugins {
    id 'java'
    id 'war'
    id 'eclipse'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '1.2.2'
}
apply from: 'rest.gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

repositories { mavenCentral() }

configurations { embeddedJetty }

dependencies {
    ext {
        jettyVersion = '9.2.1.v20140609'
        jerseyVersion = '2.22.1'
    }

    embeddedJetty "org.eclipse.jetty:jetty-server:$jettyVersion"
    embeddedJetty "org.eclipse.jetty:jetty-webapp:$jettyVersion"
    embeddedJetty "org.eclipse.jetty:jetty-annotations:$jettyVersion"
    embeddedJetty "org.eclipse.jetty:jetty-servlet:$jettyVersion"
    embeddedJetty "org.eclipse.jetty:jetty-servlets:$jettyVersion"
    embeddedJetty "org.eclipse.jetty:jetty-plus:$jettyVersion"

    compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"
    compile 'org.springframework.data:spring-data-mongodb:1.8.0.RELEASE'
    compile 'org.springframework:spring-web:4.1.7.RELEASE'

    runtime "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    runtime 'org.glassfish.jersey.ext:jersey-spring3:2.22.1'
    runtime 'org.slf4j:slf4j-jdk14:1.7.12'
    runtime "org.eclipse.jetty:jetty-annotations:$jettyVersion"
    runtime "org.eclipse.jetty:jetty-plus:$jettyVersion"

    testCompile 'junit:junit:4.12'
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:$jerseyVersion"
    testCompile 'com.github.fakemongo:fongo:1.6.2'
}

sourceSets.main.compileClasspath += configurations.embeddedJetty

war {
    from {
        configurations.embeddedJetty.collect { project.zipTree(it) }
    }
    exclude "META-INF/*.SF", "META-INF/*.RSA", "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"

    from "$buildDir/classes/main"
    exclude "com/rdbusiness/rest", "com/rdbusiness/mongodb"

    manifest { attributes 'Main-Class': 'com.rdbusiness.application.EmbeddedWar' }
}

eclipse {
    classpath {
        plusConfigurations += [configurations.embeddedJetty]
    }
}

idea {
    module {
        scopes.PROVIDED.plus += [configurations.embeddedJetty]
    }
}

task warExec(type: JavaExec, dependsOn: build) {
    main = '-jar'
    args war.archivePath
}

task warExecDebug(type: Exec) { commandLine 'gradle', 'warExec', '--debug-jvm' }

jar {
    manifest {
        attributes 'Author': 'RDBusiness'
        attributes 'Main-Class': 'com.rdbusiness.application.EmbeddedJar'
    }
}

shadowJar {
    from project.configurations.embeddedJetty

    append('META-INF/spring.handlers')
    append('META-INF/spring.schemas')

    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA', "about.html", "about_files/**", "readme.txt", "plugin.properties", "jetty-dir.css"
    exclude 'notice.txt', 'license.txt', 'overview.html', 'changelog.txt'
}

task shadowJarExec(type: JavaExec, dependsOn: shadowJar) {
    main = '-jar'
    args shadowJar.archivePath
}

task shadowJarExecDebug(type: Exec) { commandLine 'gradle', 'shadowJarExec', '--debug-jvm' }
